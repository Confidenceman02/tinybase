var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,f=async a=>c.all(a),E="_",p="_id",v=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",h=(a,t="")=>a.join(t),T=(a,t)=>a.map(t),A=a=>0==d(a),N=(a,t)=>a.filter(t),g=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,C=a=>[...a?.values()??[]],b=(a,t)=>a?.delete(t),L=Object,R=a=>L.getPrototypeOf(a),S=L.keys,D=L.freeze,I=(a=[])=>L.fromEntries(a),P=(...a)=>L.assign({},...a),_=(a,t)=>T(L.entries(a),(([a,e])=>t(e,a))),F=a=>L.values(a),M=a=>d(S(a)),x=a=>(a=>!l(a)&&y(R(a),(a=>a==L.prototype||l(R(a))),(()=>!0)))(a)&&0==M(a),j=a=>new Map(a),B=a=>[...a?.keys()??[]],H=(a,t)=>a?.get(t),Y=(a,t)=>T([...a?.entries()??[]],(([a,e])=>t(e,a))),$=(a,t,e)=>l(e)?(b(a,t),a):a?.set(t,e),k=(a,t,e)=>(O(a,t)||$(a,t,e()),H(a,t)),G=(a,t,e,n=$)=>(_(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!l(((a,t)=>y(a,(a=>a[t])))(a,t)))(t,e)?0:n(a,e))),a),J=a=>new Set(Array.isArray(a)||l(a)?a:[a]),U=(a,t)=>a?.add(t),W="TABLE",z="ALTER "+W,K="DELETE FROM",V=m+"*FROM",q="FROM pragma_table_",Q="WHERE",X=(a,t,e,i)=>{const o=j();return[async()=>G(o,I(await f(T(await a("SELECT name "+q+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+aa(t)+")ORDER BY name",t),(async({name:t})=>[t,I(T(await a(m+" name,type "+q+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>$(o,t,G(k(o,t,j),e,((a,t,e)=>{e!=H(a,t)&&$(a,t,e)}),((a,t)=>$(a,t))))),((a,t)=>$(o,t))),async(t,e)=>((a,t)=>!l(H(H(o,a),t)))(t,e)?I(N(T(await a(V+v(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!x(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=J();_(c??{},(a=>T(S(a??{}),(a=>U(u,a)))));const d=C(u);if(!w&&y&&A(d)&&O(o,t))return await a("DROP "+W+v(t)),void $(o,t);if(A(d)||O(o,t)){const s=H(o,t),i=J(B(s));await f([...T(d,(async e=>{b(i,e)||(await a(z+v(t)+"ADD"+v(e)),$(s,e,n))})),...!w&&r?T(C(i),(async n=>{n!=e&&(await a(z+v(t)+"DROP"+v(n)),$(s,n))})):[]])}else await a("CREATE "+W+v(t)+"("+v(e)+` PRIMARY KEY ON CONFLICT REPLACE${h(T(d,(a=>s+v(a))))});`),$(o,t,j([[e,n],...T(d,(a=>[a,n]))]));if(w)l(c)?await a(K+v(t)+Q+" 1"):await f(_(c,(async(n,s)=>{l(n)?await a(K+v(t)+Q+v(e)+"=?",[s]):A(d)||await Z(a,t,e,S(n),[s,...F(n)],i)})));else if(A(d))O(o,t)&&await a(K+v(t)+Q+" 1");else{const n=N(B(H(o,t)),(a=>a!=e)),s=[],r=[];_(c??{},((a,t)=>{g(s,t,...T(n,(t=>a?.[t]))),g(r,t)})),await Z(a,t,e,n,s,i),await a(K+v(t)+Q+v(e)+"NOT IN("+aa(r)+")",r)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},Z=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+v(t)+"("+v(e)+h(T(i,(a=>s+v(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+v(e)+")DO UPDATE SET"+h(T(i,(a=>v(a)+"=excluded."+v(a))),s):n),T(c,(a=>a??null))),aa=a=>h(T(a,(()=>"?")),s),ta=JSON.parse,ea=j(),na=j(),sa=(a,t,e,n,s,i,[o,c]=[],r=[])=>{let w,u,d,f=0,E=0;k(ea,r,(()=>0)),k(na,r,(()=>[]));const p=async a=>(2!=f&&(f=1,await v.schedule((async()=>{await a(),f=0}))),v),v={load:async(e,n)=>await p((async()=>{try{a.setContent(await t())}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(v.stopAutoLoad(),await v.load(e,s),E=1,d=n((async(e,n)=>{if(n){const t=n();await p((async()=>a.setTransactionChanges(t)))}else await p((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),v),stopAutoLoad:()=>(E&&(s(d),d=void 0,E=0),v),save:async t=>(1!=f&&(f=2,await v.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}f=0}))),v),startAutoSave:async()=>(await v.stopAutoSave().save(),w=a.addDidFinishTransactionListener(((a,t)=>{const[e,n]=t();x(e)&&x(n)||v.save((()=>[e,n]))})),v),stopAutoSave:()=>(y(w,a.delListener),w=void 0,v),schedule:async(...a)=>(g(H(na,r),...a),await(async()=>{if(!H(ea,r)){for($(ea,r,1);!l((a=H(na,r),u=a.shift()));)try{await u()}catch(a){i?.(a)}$(ea,r,0)}var a})(),v),getStore:()=>a,destroy:()=>v.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return o&&(v[o]=()=>c),D(v)},ia="store",oa=(a,t,e,n,s,[i],o,c,r,l)=>{const[y,w,u,d]=X(t,o,s,l);return sa(a,(async()=>await d((async()=>(await y(),ta((await w(i,p))[E]?.[ia]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,p,{[E]:{[ia]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?L.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,[r,c],c)},ca=(a,t,e,n,s,[i,o,[c,r,y]],w,u,d,v)=>{const[m,h,T,A]=X(t,w,s,v),g=async(a,t)=>await f(Y(o,(async([e,n,s,i],o)=>{const c=a[o];t&&void 0===c||await T(e,n,c,s,i,t)}))),O=async(a,t)=>r?await T(y,p,{[E]:a},!0,!0,t):null;return sa(a,(async()=>await A((async()=>{await m();const a=await(async()=>I(N(await f(Y(i,(async([a,t],e)=>[a,await h(e,t)]))),(a=>!x(a[1])))))(),t=await(async()=>c?(await h(y,p))[E]:{})();return x(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await A((async()=>{if(await m(),l(t)){const[t,e]=a();await g(t),await O(e)}else{const[a,e]=t();await g(a,!0),await O(e,!0)}}))),e,n,s,[d,u],u)},ra="json",la="autoLoadIntervalSeconds",ya="rowIdColumnName",wa="tableId",ua="tableName",da={mode:ra,[la]:1},fa={load:0,save:0,[ua]:e+"_values"},Ea=(a,t,e,n)=>{const s=j();return _(a,((a,i)=>{const o=u(F(P(t,w(a)?{[e]:a}:a)),0,M(t));l(o[0])||n(i,o[0])||$(s,i,o)})),s},pa="pragma ",va="data_version",ma="schema_version",ha=(a,t,n,s,i,o,c,l,y="getDb",d)=>{let f,E,v;const[h,T,A,N]=(a=>{const t=(a=>P(da,w(a)?{storeTableName:a}:a??{}))(a),n=t[la];if(t.mode==ra){const{storeTableName:a=e}=t;return[1,n,[a],J(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=u(F(P(fa,o)),0,M(fa)),r=c[2],l=J(r);return[0,n,[Ea(s,{[wa]:null,[ya]:p},wa,(a=>U(l,a)&&a==r)),Ea(i,{[ua]:null,[ya]:p,deleteEmptyColumns:0,deleteEmptyTable:0},ua,((a,t)=>U(l,t)&&t==r)),c],l]})(t);return(h?oa:ca)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(pa+va))[0][va],e=(await n(pa+ma))[0][ma],s=(await n(m+" TOTAL_CHANGES() c"))[0].c;t==(f??=t)&&e==(E??=e)&&s==(v??=s)||(a(),f=t,E=e)}catch{}},e=T,t(),setInterval(t,1e3*e)),s((t=>N.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),f=E=null,i(t)}),c,A,C(N),l,y,d)};a.createPowerSyncPersister=(a,t,e,n,s,i=!1)=>ha(a,e,(async(a,e=[])=>t.execute(a,e).then((a=>a.rows?._array??[]))),(a=>{const e=new AbortController,n=t.onChange({rawTableNames:!0,signal:e.signal});return(async()=>{for await(const t of n)T(t.changedTables,a)})(),e}),(a=>a.abort()),n,s,t,"getPowerSync",i)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterPowersync={});
