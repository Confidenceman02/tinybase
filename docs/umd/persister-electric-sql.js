var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",s="",n=",",i=t(s),c=(a,t)=>a.repeat(t),o=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,E=(a,t,e)=>a.slice(t,e),u=a=>a.length,d=async a=>o.all(a),f="_",p="_id",T=a=>`"${a.replace(/"/g,'""')}"`,v="SELECT",m=(a,t="")=>a.join(t),A=(a,t)=>a.map(t),L=a=>0==u(a),h=(a,t)=>a.filter(t),R=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,N=a=>[...a?.values()??[]],C=(a,t)=>a?.delete(t),b=Object,g=a=>b.getPrototypeOf(a),S=b.keys,D=b.freeze,I=(a=[])=>b.fromEntries(a),P=(...a)=>b.assign({},...a),F=(a,t)=>A(b.entries(a),(([a,e])=>t(e,a))),M=a=>b.values(a),$=a=>u(S(a)),_=a=>(a=>!l(a)&&y(g(a),(a=>a==b.prototype||l(g(a))),(()=>!0)))(a)&&0==$(a),B=a=>new Map(a),H=a=>[...a?.keys()??[]],j=(a,t)=>a?.get(t),x=(a,t)=>A([...a?.entries()??[]],(([a,e])=>t(e,a))),W=(a,t,e)=>l(e)?(C(a,t),a):a?.set(t,e),q=(a,t,e)=>(O(a,t)||W(a,t,e()),j(a,t)),Y=(a,t,e,s=W)=>(F(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!l(((a,t)=>y(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),k=a=>new Set(Array.isArray(a)||l(a)?a:[a]),G=(a,t)=>a?.add(t),J=v+"*FROM",U="FROM pragma_table_",z="WHERE",K=(a,t,e,i)=>{const c=B();return[async()=>Y(c,I(await d(A(await a("SELECT name "+U+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+Q(t)+")ORDER BY name",t),(async({name:t})=>[t,I(A(await a(v+" name,type "+U+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>W(c,t,Y(q(c,t,B),e,((a,t,e)=>{e!=j(a,t)&&W(a,t,e)}),((a,t)=>W(a,t))))),((a,t)=>W(c,t))),async(t,e)=>((a,t)=>!l(j(j(c,a),t)))(t,e)?I(h(A(await a(J+T(t)),(a=>{return[a[e],(t={...a},s=e,delete t[s],t)];var t,s})),(([a,t])=>!l(a)&&!_(t)))):{},async(t,e,o,r,y,w=!1)=>{const E=k();F(o??{},(a=>A(S(a??{}),(a=>G(E,a)))));const u=N(E);if(!w&&y&&L(u)&&O(c,t))return await a("DROP TABLE"+T(t)),void W(c,t);if(L(u)||O(c,t)){const n=j(c,t),i=k(H(n));await d([...A(u,(async e=>{C(i,e)||(await a(`ALTER TABLE${T(t)}ADD${T(e)}`),W(n,e,s))})),...!w&&r?A(N(i),(async s=>{s!=e&&(await a(`ALTER TABLE${T(t)}DROP${T(s)}`),W(n,s))})):[]])}else await a(`CREATE TABLE${T(t)}(${T(e)} PRIMARY KEY ON CONFLICT REPLACE${m(A(u,(a=>n+T(a))))});`),W(c,t,B([[e,s],...A(u,(a=>[a,s]))]));if(w)l(o)?await a("DELETE FROM"+T(t)+"WHERE 1"):await d(F(o,(async(s,n)=>{l(s)?await a("DELETE FROM"+T(t)+z+T(e)+"=?",[n]):L(u)||await V(a,t,e,S(s),[n,...M(s)],i)})));else if(L(u))O(c,t)&&await a("DELETE FROM"+T(t)+"WHERE 1");else{const s=h(H(j(c,t)),(a=>a!=e)),n=[],i=[];F(o??{},((a,t)=>{R(n,t,...A(s,(t=>a?.[t]))),R(i,t)})),await V(a,t,e,s,n),await a("DELETE FROM"+T(t)+z+T(e)+"NOT IN("+Q(i)+")",i)}},async t=>{let s;await a("BEGIN");try{s=await t()}catch(a){e?.(a)}return await a("END"),s}]},V=async(a,t,e,i,o,r=!0)=>await a("INSERT "+(r?s:"OR REPLACE ")+"INTO"+T(t)+"("+T(e)+m(A(i,(a=>n+T(a))))+")VALUES"+E(c(`,(?${c(",?",u(i))})`,u(o)/(u(i)+1)),1)+(r?"ON CONFLICT("+T(e)+")DO UPDATE SET"+m(A(i,(a=>T(a)+"=excluded."+T(a))),n):s),A(o,(a=>a??null))),Q=a=>m(A(a,(()=>"?")),n),X=JSON.parse,Z=B(),aa=B(),ta=(a,t,e,s,n,i,[c,o]=[],r=[])=>{let w,E,u,d=0,f=0;q(Z,r,(()=>0)),q(aa,r,(()=>[]));const p=async a=>(2!=d&&(d=1,await T.schedule((async()=>{await a(),d=0}))),T),T={load:async(e,s)=>await p((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(T.stopAutoLoad(),await T.load(e,n),f=1,u=s((async(e,s)=>{if(s){const t=s();await p((async()=>a.setTransactionChanges(t)))}else await p((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(f&&(n(u),u=void 0,f=0),T),save:async t=>(1!=d&&(d=2,await T.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}d=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),w=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();_(e)&&_(s)||T.save((()=>[e,s]))})),T),stopAutoSave:()=>(y(w,a.delListener),w=void 0,T),schedule:async(...a)=>(R(j(aa,r),...a),await(async()=>{if(!j(Z,r)){for(W(Z,r,1);!l((a=j(aa,r),E=a.shift()));)try{await E()}catch(a){i?.(a)}W(Z,r,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(T[c]=()=>o),D(T)},ea="store",sa=(a,t,e,s,n,[i],c,o,r)=>{const[l,y,w,E]=K(t,c,n);return ta(a,(async()=>await E((async()=>(await l(),X((await y(i,p))[f]?.[ea]??"null"))))),(async a=>await E((async()=>{var t;await l(),await w(i,p,{[f]:{[ea]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?b.fromEntries([...t]):t)))}},!0,!0)}))),e,s,n,[r,o],o)},na=(a,t,e,s,n,[i,c,[o,r,y]],w,E,u,T)=>{const[v,m,A,L]=K(t,w,n,T),R=async(a,t)=>await d(x(c,(async([e,s,n,i],c)=>{const o=a[c];t&&void 0===o||await A(e,s,o,n,i,t)}))),O=async(a,t)=>r?await A(y,p,{[f]:a},!0,!0,t):null;return ta(a,(async()=>await L((async()=>{await v();const a=await(async()=>I(h(await d(x(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!_(a[1])))))(),t=await(async()=>o?(await m(y,p))[f]:{})();return _(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await L((async()=>{if(await v(),l(t)){const[t,e]=a();await R(t),await O(e)}else{const[a,e]=t();await R(a,!0),await O(e,!0)}}))),e,s,n,[u,E],E)},ia="json",ca="autoLoadIntervalSeconds",oa="rowIdColumnName",ra="tableId",la="tableName",ya={mode:ia,[ca]:1},wa={load:0,save:0,[la]:e+"_values"},Ea=(a,t,e,s)=>{const n=B();return F(a,((a,i)=>{const c=E(M(P(t,w(a)?{[e]:a}:a)),0,$(t));l(c[0])||s(i,c[0])||W(n,i,c)})),n},ua="pragma ",da="data_version",fa="schema_version",pa=(a,t,s,n,i,c,o,l,y="getDb",u)=>{let d,f,T;const[m,A,L,h]=(a=>{const t=(a=>P(ya,w(a)?{storeTableName:a}:a??{}))(a),s=t[ca];if(t.mode==ia){const{storeTableName:a=e}=t;return[1,s,[a],k(a)]}const{tables:{load:n={},save:i={}}={},values:c={}}=t,o=E(M(P(wa,c)),0,$(wa)),r=o[2],l=k(r);return[0,s,[Ea(n,{[ra]:null,[oa]:p},ra,(a=>G(l,a)&&a==r)),Ea(i,{[la]:null,[oa]:p,deleteEmptyColumns:0,deleteEmptyTable:0},la,((a,t)=>G(l,t)&&t==r)),o],l]})(t);return(m?sa:na)(a,c?async(a,t)=>(c(a,t),await s(a,t)):s,(a=>{return[(t=async()=>{try{const t=(await s(ua+da))[0][da],e=(await s(ua+fa))[0][fa],n=(await s(v+" TOTAL_CHANGES() c"))[0].c;t==(d??=t)&&e==(f??=e)&&n==(T??=n)||(a(),d=t,f=e)}catch{}},e=A,t(),setInterval(t,1e3*e)),n((t=>h.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),d=f=null,i(t)}),o,L,N(h),l,y,u)};a.createElectricSqlPersister=(a,t,e,s,n)=>pa(a,e,(async(a,e=[])=>await t.db.raw({sql:a,args:e})),(a=>t.notifier.subscribeToDataChanges((e=>{return s=({tablename:t})=>a(t),t.notifier.alias(e).forEach(s);var s}))),(a=>a()),s,n,t,"getElectricClient")},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterElectricSql={});
