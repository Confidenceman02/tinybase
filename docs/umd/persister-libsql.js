var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",s="",n=",",i=t(s),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,E=async a=>c.all(a),f="_",p="_id",v=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",A=(a,t="")=>a.join(t),T=(a,t)=>a.map(t),h=a=>0==d(a),L=(a,t)=>a.filter(t),N=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,C=a=>[...a?.values()??[]],R=(a,t)=>a?.delete(t),g=Object,S=a=>g.getPrototypeOf(a),b=g.keys,D=g.freeze,I=(a=[])=>g.fromEntries(a),P=(...a)=>g.assign({},...a),_=(a,t)=>T(g.entries(a),(([a,e])=>t(e,a))),F=a=>g.values(a),M=a=>d(b(a)),x=a=>(a=>!l(a)&&y(S(a),(a=>a==g.prototype||l(S(a))),(()=>!0)))(a)&&0==M(a),j=a=>new Map(a),B=a=>[...a?.keys()??[]],q=(a,t)=>a?.get(t),H=(a,t)=>T([...a?.entries()??[]],(([a,e])=>t(e,a))),Y=(a,t,e)=>l(e)?(R(a,t),a):a?.set(t,e),$=(a,t,e)=>(O(a,t)||Y(a,t,e()),q(a,t)),k=(a,t,e,s=Y)=>(_(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!l(((a,t)=>y(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),G=a=>new Set(Array.isArray(a)||l(a)?a:[a]),J=(a,t)=>a?.add(t),U="TABLE",W="ALTER "+U,z="DELETE FROM",K=m+"*FROM",V="FROM pragma_table_",Q="WHERE",X=(a,t,e,i)=>{const o=j();return[async()=>k(o,I(await E(T(await a("SELECT name "+V+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+aa(t)+")ORDER BY name",t),(async({name:t})=>[t,I(T(await a(m+" name,type "+V+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>Y(o,t,k($(o,t,j),e,((a,t,e)=>{e!=q(a,t)&&Y(a,t,e)}),((a,t)=>Y(a,t))))),((a,t)=>Y(o,t))),async(t,e)=>((a,t)=>!l(q(q(o,a),t)))(t,e)?I(L(T(await a(K+v(t)),(a=>{return[a[e],(t={...a},s=e,delete t[s],t)];var t,s})),(([a,t])=>!l(a)&&!x(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=G();_(c??{},(a=>T(b(a??{}),(a=>J(u,a)))));const d=C(u);if(!w&&y&&h(d)&&O(o,t))return await a("DROP "+U+v(t)),void Y(o,t);if(h(d)||O(o,t)){const n=q(o,t),i=G(B(n));await E([...T(d,(async e=>{R(i,e)||(await a(W+v(t)+"ADD"+v(e)),Y(n,e,s))})),...!w&&r?T(C(i),(async s=>{s!=e&&(await a(W+v(t)+"DROP"+v(s)),Y(n,s))})):[]])}else await a("CREATE "+U+v(t)+"("+v(e)+` PRIMARY KEY ON CONFLICT REPLACE${A(T(d,(a=>n+v(a))))});`),Y(o,t,j([[e,s],...T(d,(a=>[a,s]))]));if(w)l(c)?await a(z+v(t)+Q+" 1"):await E(_(c,(async(s,n)=>{l(s)?await a(z+v(t)+Q+v(e)+"=?",[n]):h(d)||await Z(a,t,e,b(s),[n,...F(s)],i)})));else if(h(d))O(o,t)&&await a(z+v(t)+Q+" 1");else{const s=L(B(q(o,t)),(a=>a!=e)),n=[],r=[];_(c??{},((a,t)=>{N(n,t,...T(s,(t=>a?.[t]))),N(r,t)})),await Z(a,t,e,s,n,i),await a(z+v(t)+Q+v(e)+"NOT IN("+aa(r)+")",r)}},async t=>{let s;await a("BEGIN");try{s=await t()}catch(a){e?.(a)}return await a("END"),s}]},Z=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?s:"OR REPLACE ")+"INTO"+v(t)+"("+v(e)+A(T(i,(a=>n+v(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+v(e)+")DO UPDATE SET"+A(T(i,(a=>v(a)+"=excluded."+v(a))),n):s),T(c,(a=>a??null))),aa=a=>A(T(a,(()=>"?")),n),ta=JSON.parse,ea=j(),sa=j(),na=(a,t,e,s,n,i,[o,c]=[],r=[])=>{let w,u,d,E=0,f=0;$(ea,r,(()=>0)),$(sa,r,(()=>[]));const p=async a=>(2!=E&&(E=1,await v.schedule((async()=>{await a(),E=0}))),v),v={load:async(e,s)=>await p((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(v.stopAutoLoad(),await v.load(e,n),f=1,d=s((async(e,s)=>{if(s){const t=s();await p((async()=>a.setTransactionChanges(t)))}else await p((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),v),stopAutoLoad:()=>(f&&(n(d),d=void 0,f=0),v),save:async t=>(1!=E&&(E=2,await v.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}E=0}))),v),startAutoSave:async()=>(await v.stopAutoSave().save(),w=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();x(e)&&x(s)||v.save((()=>[e,s]))})),v),stopAutoSave:()=>(y(w,a.delListener),w=void 0,v),schedule:async(...a)=>(N(q(sa,r),...a),await(async()=>{if(!q(ea,r)){for(Y(ea,r,1);!l((a=q(sa,r),u=a.shift()));)try{await u()}catch(a){i?.(a)}Y(ea,r,0)}var a})(),v),getStore:()=>a,destroy:()=>v.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return o&&(v[o]=()=>c),D(v)},ia="store",oa=(a,t,e,s,n,[i],o,c,r,l)=>{const[y,w,u,d]=X(t,o,n,l);return na(a,(async()=>await d((async()=>(await y(),ta((await w(i,p))[f]?.[ia]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,p,{[f]:{[ia]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?g.fromEntries([...t]):t)))}},!0,!0)}))),e,s,n,[r,c],c)},ca=(a,t,e,s,n,[i,o,[c,r,y]],w,u,d,v)=>{const[m,A,T,h]=X(t,w,n,v),N=async(a,t)=>await E(H(o,(async([e,s,n,i],o)=>{const c=a[o];t&&void 0===c||await T(e,s,c,n,i,t)}))),O=async(a,t)=>r?await T(y,p,{[f]:a},!0,!0,t):null;return na(a,(async()=>await h((async()=>{await m();const a=await(async()=>I(L(await E(H(i,(async([a,t],e)=>[a,await A(e,t)]))),(a=>!x(a[1])))))(),t=await(async()=>c?(await A(y,p))[f]:{})();return x(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await h((async()=>{if(await m(),l(t)){const[t,e]=a();await N(t),await O(e)}else{const[a,e]=t();await N(a,!0),await O(e,!0)}}))),e,s,n,[d,u],u)},ra="json",la="autoLoadIntervalSeconds",ya="rowIdColumnName",wa="tableId",ua="tableName",da={mode:ra,[la]:1},Ea={load:0,save:0,[ua]:e+"_values"},fa=(a,t,e,s)=>{const n=j();return _(a,((a,i)=>{const o=u(F(P(t,w(a)?{[e]:a}:a)),0,M(t));l(o[0])||s(i,o[0])||Y(n,i,o)})),n},pa="pragma ",va="data_version",ma="schema_version",Aa=(a,t,s,n,i,o,c,l,y="getDb",d)=>{let E,f,v;const[A,T,h,L]=(a=>{const t=(a=>P(da,w(a)?{storeTableName:a}:a??{}))(a),s=t[la];if(t.mode==ra){const{storeTableName:a=e}=t;return[1,s,[a],G(a)]}const{tables:{load:n={},save:i={}}={},values:o={}}=t,c=u(F(P(Ea,o)),0,M(Ea)),r=c[2],l=G(r);return[0,s,[fa(n,{[wa]:null,[ya]:p},wa,(a=>J(l,a)&&a==r)),fa(i,{[ua]:null,[ya]:p,deleteEmptyColumns:0,deleteEmptyTable:0},ua,((a,t)=>J(l,t)&&t==r)),c],l]})(t);return(A?oa:ca)(a,o?async(a,t)=>(o(a,t),await s(a,t)):s,(a=>{return[(t=async()=>{try{const t=(await s(pa+va))[0][va],e=(await s(pa+ma))[0][ma],n=(await s(m+" TOTAL_CHANGES() c"))[0].c;t==(E??=t)&&e==(f??=e)&&n==(v??=n)||(a(),E=t,f=e)}catch{}},e=T,t(),setInterval(t,1e3*e)),n((t=>L.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),E=f=null,i(t)}),c,h,C(L),l,y,d)};a.createLibSqlPersister=(a,t,e,s,n)=>Aa(a,e,(async(a,e=[])=>(await t.execute({sql:a,args:e})).rows),(()=>()=>0),(a=>a()),s,n,t,"getClient")},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterLibsql={});
